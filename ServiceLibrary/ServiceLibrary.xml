<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ServiceLibrary</name>
    </assembly>
    <members>
        <member name="T:ServiceLibrary.Interfaces.IProductFileWorker`1">
            <summary>
            Interface for reading/writing products to file
            </summary>
            <typeparam name="T">Product</typeparam>
        </member>
        <member name="M:ServiceLibrary.Interfaces.IProductFileWorker`1.ReadFromFile(System.String)">
            <summary>
            Read and returns List of Product from file
            </summary>
            <param name="filePath">File path</param>
            <returns>List of BakeryProduct</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.IO.FileLoadException"></exception>
            <exception cref="T:System.IO.FileNotFoundException"></exception>
        </member>
        <member name="M:ServiceLibrary.Interfaces.IProductFileWorker`1.WriteToFile(System.String,System.Collections.Generic.List{`0})">
            <summary>
            Write to file List of Product
            </summary>
            <param name="filePath">File path</param>
            <param name="products">List of BakeryProduct for writing to file</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.IO.FileNotFoundException"></exception>
        </member>
        <member name="T:ServiceLibrary.Services.BakeryProductFileWorker">
            <summary>
            Static class that allowes you to read/write BakeryProducts from/to file
            </summary>
        </member>
        <member name="M:ServiceLibrary.Services.BakeryProductFileWorker.ReadFromFile(System.String)">
            <summary>
            Read and returns List of BakeryProduct from file
            </summary>
            <param name="filePath">File path</param>
            <returns>List of BakeryProduct</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.IO.FileLoadException"></exception>
            <exception cref="T:System.IO.FileNotFoundException"></exception>
        </member>
        <member name="M:ServiceLibrary.Services.BakeryProductFileWorker.WriteToFile(System.String,System.Collections.Generic.List{DataLibrary.Models.BakeryProduct})">
            <summary>
            Write to file List of BakeryProduct
            </summary>
            <param name="filePath">File path</param>
            <param name="products">List of BakeryProduct for writing to file</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.IO.FileNotFoundException"></exception>
        </member>
        <member name="T:ServiceLibrary.Services.MainService">
            <summary>
            Class that has main functionality for the Task
            </summary>
        </member>
        <member name="M:ServiceLibrary.Services.MainService.CloneAndSortByCaloriesAmount(System.Collections.Generic.List{DataLibrary.Models.BakeryProduct})">
            <summary>
            Clones and Sorts bakery products by Calories Ammount
            </summary>
            <param name="products">List of bakery products</param>
            <returns>cloned and sorted list of bakery products</returns>
        </member>
        <member name="M:ServiceLibrary.Services.MainService.CopyAndSortByPriceAmount(System.Collections.Generic.List{DataLibrary.Models.BakeryProduct})">
            <summary>
            Copies and Sorts bakery products by price
            </summary>
            <param name="products">List of bakery products</param>
            <returns>copied and sorted list of bakery products</returns>
        </member>
        <member name="M:ServiceLibrary.Services.MainService.TakeWhereProductsIsEqualTo(System.Collections.Generic.List{DataLibrary.Models.BakeryProduct},DataLibrary.Models.BakeryProduct)">
            <summary>
            Takes products from list which are equal to product with Price and Calories
            </summary>
            <param name="products">list where to take</param>
            <param name="product">comparable product</param>
            <returns>resulting list of products</returns>
        </member>
        <member name="M:ServiceLibrary.Services.MainService.TakeWhereProductsWeightIsHigherThan(System.Collections.Generic.List{DataLibrary.Models.BakeryProduct},System.String,System.Double)">
            <summary>
            Takes products from list where comparable ingredient weight is higher than
            </summary>
            <param name="products">list where to take</param>
            <param name="ingredient">comparable ingredient</param>
            <param name="weight">comparable weight</param>
            <returns>resulting list of products</returns>
        </member>
        <member name="M:ServiceLibrary.Services.MainService.TakeWhereIngredientCountIsHigherThan(System.Collections.Generic.List{DataLibrary.Models.BakeryProduct},System.Int32)">
            <summary>
            Takes products from list where ingredients count is higher than
            </summary>
            <param name="products">list where to take</param>
            <param name="count">comparable count</param>
            <returns>resulting list of products</returns>
        </member>
    </members>
</doc>
